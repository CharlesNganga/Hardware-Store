This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
src/
  api/
    api.js
    services.js
  assets/
    Logo.png
  components/
    common/
      CompanyLogos.jsx
      FeaturedProducts.jsx
      FlexSlider.jsx
      FloatingActions.jsx
      InfoSection.jsx
      LatestsProducts.jsx
      ProductCard.jsx
      ProductModal.jsx
      ProductsGrid.jsx
      ProductsHero.jsx
      SubcategoriesSection.jsx
      ThreeColumnSection.jsx
    navigation/
      Footer.jsx
      Navbar.jsx
      Topbar.jsx
  pages/
    Home.jsx
    Products.jsx
  App.css
  App.jsx
  index.css
  main.jsx
.gitignore
eslint.config.js
index.html
package.json
README.md
text.html
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/api/api.js">
// src/api.js
import axios from "axios";

// 1. Keep this export from your previous version.
// You NEED this for image paths.
export const backendUrl = "http://localhost:8000";

// 2. Define the API base URL
const BASE_URL = `${backendUrl}/api/`;

// 3. Create your new, robust axios instance
const api = axios.create({
  baseURL: BASE_URL,
  timeout: 10000, // 10 seconds
  headers: {
    "Content-Type": "application/json",
  },
});

// 4. Keep your new interceptors (they are perfect)
api.interceptors.request.use(
  (config) => {
    // You can add auth tokens here later
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

api.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response) {
      console.error("API Error:", error.response.data);
    } else if (error.request) {
      console.error("Network Error:", error.request);
    } else {
      console.error("Error:", error.message);
    }
    return Promise.reject(error);
  }
);

// 5. Export the api instance
export default api;
</file>

<file path="src/api/services.js">
import api from './api';

// ========================================
// Categories
// ========================================
export const getCategories = async () => {
  const response = await api.get('/categories/');
  return response.data;
};

// ========================================
// Products
// ========================================
export const getAllProducts = async (params = {}) => {
  const response = await api.get('/products/', { params });
  return response.data;
};

export const getProductsByCategory = async (categorySlug) => {
  const response = await api.get('/products/', {
    params: { category: categorySlug }
  });
  return response.data;
};

export const getProductDetail = async (productId) => {
  const response = await api.get(`/products/${productId}/`);
  return response.data;
};

export const getFeaturedProducts = async () => {
  const response = await api.get('/products/featured/');
  return response.data;
};

export const getLatestProducts = async () => {
  const response = await api.get('/products/latest/');
  return response.data;
};

export const getBestSellerProducts = async () => {
  const response = await api.get('/products/bestsellers/');
  return response.data;
};

export const searchProducts = async (searchTerm) => {
  const response = await api.get('/products/', {
    params: { search: searchTerm }
  });
  return response.data;
};

// ========================================
// Homepage Content
// ========================================
export const getSlides = async () => {
  const response = await api.get('/slides/');
  return response.data;
};

export const getCompanyInfo = async () => {
  const response = await api.get('/company-info/');
  return response.data;
};

export const getCompanyLogos = async () => {
  const response = await api.get('/company-logos/');
  return response.data;
};
</file>

<file path="src/components/common/CompanyLogos.jsx">
import React, { useEffect, useState } from "react";

import { getCompanyLogos } from "../../api/services";

const CompanyLogos = () => {
  const [logos, setLogos] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchLogos = async () => {
      try {
        setLoading(true);
        const data = await getCompanyLogos();
        setLogos(Array.isArray(data) ? data : data.results || []);
        setError(null);
      } catch (err) {
        console.error("Error fetching company logos:", err);
        setError("Failed to load company logos");
      } finally {
        setLoading(false);
      }
    };

    fetchLogos();
  }, []);

  return (
    <div className="w-full my-32">
      {/* Top Divider */}
      <hr className="border-gray-300 mb-6" />

      {/* Logos Container */}
      <div className="overflow-hidden relative flex items-center">
        {loading ? (
          <div className="flex gap-8 w-full justify-center">
            {[1, 2, 3, 4, 5, 6].map((i) => (
              <div
                key={i}
                className="flex-shrink-0 w-40 h-20 bg-gray-200 animate-pulse rounded"
              ></div>
            ))}
          </div>
        ) : error ? (
          <div className="text-center w-full text-red-500 py-6">{error}</div>
        ) : logos.length === 0 ? (
          <div className="text-center w-full text-gray-500 py-6">
            No company logos available.
          </div>
        ) : (
          <div className="flex animate-scroll gap-8">
            {logos.concat(logos).map((logo, index) => (
              <div
                key={index}
                className="flex-shrink-0 w-40 h-20 bg-white shadow flex items-center justify-center rounded"
              >
                {logo.logo ? (
                  <img
                    src={logo.logo}
                    alt={logo.name || `Logo ${index + 1}`}
                    className="max-h-full max-w-full object-contain"
                  />
                ) : (
                  <span className="text-gray-500 text-sm font-semibold">
                    {logo.name || "No Logo"}
                  </span>
                )}
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Bottom Divider */}
      <hr className="border-gray-300 mt-6" />

      {/* Scroll Animation */}
      <style jsx>{`
        @keyframes scroll {
          0% {
            transform: translateX(0);
          }
          100% {
            transform: translateX(-50%);
          }
        }
        .animate-scroll {
          display: flex;
          width: max-content;
          animation: scroll 20s linear infinite;
        }
      `}</style>
    </div>
  );
};

export default CompanyLogos;
</file>

<file path="src/components/common/FeaturedProducts.jsx">
import React, { useEffect, useState } from "react";

import { getFeaturedProducts } from "../../api/services";

const FeaturedProducts = () => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Fetch featured products from API
  useEffect(() => {
    const fetchFeaturedProducts = async () => {
      try {
        setLoading(true);
        const data = await getFeaturedProducts();

        // Handle both array and paginated response
        let productsArray = [];
        if (Array.isArray(data)) {
          productsArray = data;
        } else if (data && data.results && Array.isArray(data.results)) {
          productsArray = data.results;
        }

        // Take only first 3 featured products
        setProducts(productsArray.slice(0, 3));
        setError(null);
      } catch (err) {
        console.error("Error fetching featured products:", err);
        setError("Failed to load featured products");
        setProducts([]);
      } finally {
        setLoading(false);
      }
    };

    fetchFeaturedProducts();
  }, []);

  // Loading state
  if (loading) {
    return (
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-10">
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {[1, 2, 3].map((i) => (
            <div
              key={i}
              className="bg-gray-200 animate-pulse aspect-[4/5] rounded-lg"
            ></div>
          ))}
        </div>
      </div>
    );
  }

  // Error state
  if (error) {
    return (
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-10">
        <div className="text-center py-12">
          <p className="text-red-500">{error}</p>
        </div>
      </div>
    );
  }

  // No products - show message instead of hiding
  if (products.length === 0) {
    return (
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-10">
        <div className="text-center py-12 bg-gray-50 rounded-lg">
          <p className="text-gray-500">
            No featured products available. Please mark some products as
            featured in the admin panel.
          </p>
        </div>
      </div>
    );
  }

  // Display featured products
  return (
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-10">
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {products.map((product) => (
          <a
            key={product.id}
            href={`/products/${product.category_slug || ""}`}
            className="relative group overflow-hidden shadow-lg transform transition duration-300 hover:scale-105"
          >
            {/* Product Image */}
            <div className="w-[85%] mx-auto aspect-[4/5] bg-black">
              {product.thumbnail ? (
                <img
                  src={product.thumbnail}
                  alt={product.name}
                  className="w-full h-full object-cover group-hover:opacity-90 transition duration-300"
                />
              ) : (
                <div className="w-full h-full flex items-center justify-center text-white text-sm">
                  Image Coming Soon
                </div>
              )}
            </div>

            {/* Overlay text */}
            <div className="absolute inset-0 flex flex-col items-center px-4 pt-4">
              <p className="text-xs sm:text-sm font-semibold uppercase text-white bg-[#1228e1] px-2 py-1 mb-2">
                Featured Product
              </p>
              <h3 className="text-lg md:text-xl font-bold text-white drop-shadow-lg">
                {product.name}
              </h3>
              <p className="text-sm text-white drop-shadow-lg mt-2">
                {product.company}
              </p>
            </div>
          </a>
        ))}
      </div>
    </div>
  );
};

export default FeaturedProducts;
</file>

<file path="src/components/common/FlexSlider.jsx">
import { ChevronLeft, ChevronRight } from 'lucide-react';
import React, { useCallback, useEffect, useState } from 'react';

import { getSlides } from '../../api/services';

const FlexSlider = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isAnimating, setIsAnimating] = useState(false);
  const [slides, setSlides] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const interval = 8000;

  // Fetch slides from API
  useEffect(() => {
    const fetchSlides = async () => {
      try {
        setLoading(true);
        const data = await getSlides();
        // Handle both paginated (data.results) and non-paginated (data) responses
        const slidesData = Array.isArray(data) ? data : (data.results || []);
        setSlides(slidesData);
        setError(null);
      } catch (err) {
        console.error('Error fetching slides:', err);
        setError('Failed to load slides');
        setSlides([]); // Set empty array on error
      } finally {
        setLoading(false);
      }
    };

    fetchSlides();
  }, []);

  const nextSlide = useCallback(() => {
    if (isAnimating || slides.length === 0) return;
    setIsAnimating(true);
    setCurrentSlide((prev) => (prev + 1) % slides.length);
    setTimeout(() => setIsAnimating(false), 750);
  }, [isAnimating, slides.length]);

  const prevSlide = useCallback(() => {
    if (isAnimating || slides.length === 0) return;
    setIsAnimating(true);
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
    setTimeout(() => setIsAnimating(false), 750);
  }, [isAnimating, slides.length]);

  const goToSlide = (index) => {
    if (isAnimating || index === currentSlide) return;
    setIsAnimating(true);
    setCurrentSlide(index);
    setTimeout(() => setIsAnimating(false), 750);
  };

  // Auto-play
  useEffect(() => {
    if (slides.length === 0) return;
    const autoPlay = setInterval(() => {
      nextSlide();
    }, interval);

    return () => clearInterval(autoPlay);
  }, [nextSlide, slides.length]);

  // Keyboard navigation
  useEffect(() => {
    const handleKeyPress = (e) => {
      if (e.key === 'ArrowRight') nextSlide();
      if (e.key === 'ArrowLeft') prevSlide();
    };
    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [nextSlide, prevSlide]);

  // Loading state
  if (loading) {
    return (
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-6 sm:mt-8 lg:mt-10">
        <div className="relative w-full h-64 sm:h-80 md:h-96 lg:h-[450px] bg-gray-200 rounded-lg animate-pulse flex items-center justify-center">
          <p className="text-gray-500">Loading slides...</p>
        </div>
      </div>
    );
  }

  // Error state
  if (error) {
    return (
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-6 sm:mt-8 lg:mt-10">
        <div className="relative w-full h-64 sm:h-80 md:h-96 lg:h-[450px] bg-red-50 rounded-lg flex items-center justify-center">
          <p className="text-red-500">{error}</p>
        </div>
      </div>
    );
  }

  // No slides
  if (slides.length === 0) {
    return null;
  }

  return (
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-6 sm:mt-8 lg:mt-10">
      <div className="relative w-full overflow-hidden bg-gray-900 rounded-lg shadow-xl group">
        {/* Slides */}
        <div className="relative w-full h-64 sm:h-80 md:h-96 lg:h-[450px]">
          {slides.map((slide, index) => (
            <div
              key={slide.id}
              className={`absolute inset-0 transition-opacity duration-700 ease-in-out ${
                index === currentSlide ? 'opacity-100 z-10' : 'opacity-0 z-0'
              }`}
            >
              <img
                src={slide.image}
                alt={slide.title}
                className="w-full h-full object-cover"
              />

              {/* Content */}
              <div className="absolute inset-0 flex items-center justify-center text-center text-white px-4 sm:px-6 lg:px-8">
                <div className="max-w-3xl mx-auto">
                  <div
                    className={`transform transition-all duration-700 ${
                      index === currentSlide
                        ? 'opacity-100 translate-y-0 delay-200'
                        : 'opacity-0 translate-y-12'
                    }`}
                  >
                    <p className="text-xs sm:text-sm md:text-base lg:text-lg font-semibold uppercase tracking-wider mb-3 md:mb-4 lg:mb-6 text-blue-200">
                      {slide.subtitle}
                    </p>
                  </div>

                  <div
                    className={`transform transition-all duration-700 ${
                      index === currentSlide
                        ? 'opacity-100 translate-y-0 delay-300'
                        : 'opacity-0 translate-y-12'
                    }`}
                  >
                    <h1 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold uppercase leading-tight mb-4 md:mb-6 lg:mb-8">
                      {slide.title}
                      {slide.title_span && (
                        <span className="block text-white">{slide.title_span}</span>
                      )}
                    </h1>
                  </div>

                  <div
                    className={`transform transition-all duration-700 ${
                      index === currentSlide
                        ? 'opacity-100 translate-y-0 delay-500'
                        : 'opacity-0 translate-y-8'
                    }`}
                  >
                    <a
                      href={slide.link}
                      className="inline-block bg-[#1228e1] text-white hover:bg-white hover:text-[#1228e1] px-6 md:px-8 py-3 md:py-4 font-semibold uppercase tracking-wide transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl rounded-sm"
                    >
                      {slide.button_text}
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Navigation Arrows */}
        <div className="absolute inset-y-0 left-0 flex items-center z-30">
          <button
            onClick={prevSlide}
            disabled={isAnimating}
            className="ml-4 w-12 h-12 bg-white bg-opacity-90 hover:bg-opacity-100 border border-gray-200 rounded-full flex items-center justify-center text-gray-800 hover:text-[#1228e1] transition-all duration-300 transform hover:scale-110 shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 disabled:opacity-30 disabled:cursor-not-allowed"
          >
            <ChevronLeft className="w-6 h-6" />
          </button>
        </div>

        <div className="absolute inset-y-0 right-0 flex items-center z-30">
          <button
            onClick={nextSlide}
            disabled={isAnimating}
            className="mr-4 w-12 h-12 bg-white bg-opacity-90 hover:bg-opacity-100 border border-gray-200 rounded-full flex items-center justify-center text-gray-800 hover:text-[#1228e1] transition-all duration-300 transform hover:scale-110 shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 disabled:opacity-30 disabled:cursor-not-allowed"
          >
            <ChevronRight className="w-6 h-6" />
          </button>
        </div>

        {/* Dots */}
        <div className="absolute bottom-4 md:bottom-6 left-1/2 transform -translate-x-1/2 flex space-x-3 z-20">
          {slides.map((_, index) => (
            <button
              key={index}
              onClick={() => goToSlide(index)}
              disabled={isAnimating}
              className={`w-3 h-3 md:w-4 md:h-4 rounded-full transition-all duration-500 border-2 ${
                index === currentSlide
                  ? 'bg-[#1228e1] border-[#1228e1] scale-110'
                  : 'bg-white bg-opacity-60 border-white hover:bg-opacity-80'
              } disabled:opacity-50 shadow-sm`}
            />
          ))}
        </div>

        {/* Counter */}
        <div className="absolute top-4 right-4 bg-black bg-opacity-70 text-white px-3 py-1.5 text-sm font-medium shadow-lg rounded-sm">
          {currentSlide + 1} / {slides.length}
        </div>
      </div>
    </div>
  );
};

export default FlexSlider;
</file>

<file path="src/components/common/FloatingActions.jsx">
import React, { useEffect, useState } from "react";

import { ArrowUpCircle } from "lucide-react";
import { FaWhatsapp } from "react-icons/fa";

const FloatingActions = ({ phoneNumber = "254700000000", message = "Hello!" }) => {
  const [showTop, setShowTop] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setShowTop(window.scrollY > 300);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  };

  const whatsappLink = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`;

  return (
    <div className="fixed bottom-6 right-6 z-50 flex flex-col space-y-3 items-end">
      {/* WhatsApp Button */}
      <a
        href={whatsappLink}
        target="_blank"
        rel="noopener noreferrer"
        className="flex items-center border border-gray-300 rounded-full shadow-lg px-3 py-2 text-white bg-[#25D366] hover:bg-[#25D366] hover:text-black transition-colors duration-300"
        title="Chat with us on WhatsApp"
      >
        <FaWhatsapp className="w-6 h-6 mr-2 transition-colors duration-300" />
        <span className="font-semibold text-sm">Chat Us on WhatsApp</span>
      </a>

      {/* Back to Top Button */}
      <div
        className={`transform transition-all duration-500 ${
          showTop ? "opacity-100 translate-y-0" : "opacity-0 translate-y-6 pointer-events-none"
        }`}
      >
        <button
          onClick={scrollToTop}
          className="flex items-center justify-center w-12 h-12 bg-[#1228e1] text-white rounded-full shadow-lg hover:bg-blue-700 transition"
          title="Back to top"
        >
          <ArrowUpCircle className="w-6 h-6" />
        </button>
      </div>
    </div>
  );
};

export default FloatingActions;
</file>

<file path="src/components/common/InfoSection.jsx">
import { Headphones, ShieldCheck, Truck } from "lucide-react";

import React from "react";

const InfoSection = () => {
  const infoItems = [
    {
      id: 1,
      icon: Truck,
      title: "Nationwide Delivery",
      description: "Fast and reliable delivery everywhere.",
    },
    {
      id: 2,
      icon: ShieldCheck,
      title: "Quality Assurance",
      description: "Trusted products with top quality.",
    },
    {
      id: 3,
      icon: Headphones,
      title: "24/7 Support",
      description: "Always available to help you.",
    },
  ];

  return (
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-16">
      <div className="grid grid-cols-1 md:grid-cols-3 divide-y md:divide-y-0 md:divide-x divide-gray-300">
        {infoItems.map((item) => (
          <div
            key={item.id}
            className="flex items-center space-x-4 p-6 group"
          >
            <item.icon className="w-10 h-10 text-black transition-colors duration-300 group-hover:text-[#1228e1]" />
            <div className="flex flex-col justify-center">
              <h3 className="text-base md:text-lg font-bold uppercase text-black">
                {item.title}
              </h3>
              <p className="text-gray-600 text-sm mt-1">{item.description}</p>
            </div>
          </div>
        ))}
      </div>
      {/* Horizontal Divider */}
      <div className="border-t border-gray-300 mt-12"></div>
    </div>
  );
};

export default InfoSection;
</file>

<file path="src/components/common/LatestsProducts.jsx">
import React, { useEffect, useState } from "react";
import {
  getBestSellerProducts,
  getFeaturedProducts,
  getLatestProducts,
} from "../../api/services";

import ProductCard from "../common/ProductCard";

const LatestProducts = () => {
  const [activeTab, setActiveTab] = useState("New Arrivals");
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  // Fetch products based on active tab
  useEffect(() => {
    const fetchProducts = async () => {
      setLoading(true);
      setError(null);

      try {
        let data = [];
        if (activeTab === "New Arrivals") {
          data = await getLatestProducts();
        } else if (activeTab === "Featured") {
          data = await getFeaturedProducts();
        } else if (activeTab === "Best Sellers") {
          data = await getBestSellerProducts();
        }

        // Handle both array and paginated responses
        const list = Array.isArray(data)
          ? data
          : data?.results && Array.isArray(data.results)
          ? data.results
          : [];

        setProducts(list);
      } catch (err) {
        console.error("Error loading products:", err);
        setError("Failed to load products. Please try again later.");
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, [activeTab]);

  return (
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-12">
      {/* Heading */}
      <h2 className="text-2xl md:text-3xl font-bold text-gray-800 mb-6 text-center">
        Latest Products
      </h2>

      {/* Tabs */}
      <div className="flex justify-center space-x-6 mb-8">
        {["New Arrivals", "Featured", "Best Sellers"].map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 font-medium transition ${
              activeTab === tab
                ? "text-[#1228e1] border-b-2 border-[#1228e1]"
                : "text-gray-600 hover:text-[#1228e1]"
            }`}
          >
            {tab}
          </button>
        ))}
      </div>

      {/* Loading State */}
      {loading && (
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-8">
          {[1, 2, 3, 4].map((i) => (
            <div
              key={i}
              className="bg-gray-200 animate-pulse aspect-[4/5] rounded-lg"
            ></div>
          ))}
        </div>
      )}

      {/* Error State */}
      {error && (
        <div className="text-center text-red-500 py-8">{error}</div>
      )}

      {/* No Products */}
      {!loading && !error && products.length === 0 && (
        <div className="text-center text-gray-500 py-8">
          No products found for this category.
        </div>
      )}

      {/* Product Grid */}
      {!loading && !error && products.length > 0 && (
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-8">
          {products.map((product) => (
            <ProductCard
              key={product.id}
              image={product.thumbnail || "https://via.placeholder.com/300x400"}
              company={product.company}
              name={product.name}
              price={product.price}
            />
          ))}
        </div>
      )}

      {/* All Products Button */}
      <div className="text-center">
        <a
          href="/products"
          className="inline-block bg-[#1228e1] text-white px-6 py-3 font-semibold uppercase tracking-wide hover:bg-white hover:text-[#1228e1] border border-[#1228e1] transition"
        >
          All Products
        </a>
      </div>
    </div>
  );
};

export default LatestProducts;
</file>

<file path="src/components/common/ProductCard.jsx">
import { Expand, Heart, ShoppingCart } from "lucide-react";
import React, { useState } from "react";

import ProductModal from "./ProductModal";

const ProductCard = ({ id, company, name, price, image, product }) => {
  const [isModalOpen, setIsModalOpen] = useState(false);

  // Fallbacks if props are missing
  const displayImage = image || "https://via.placeholder.com/400x300";
  const displayName = name || "Unnamed Product";
  const displayCompany = company || "Unknown Brand";
  const displayPrice = price || "N/A";

  return (
    <>
      <div className="relative group bg-white shadow hover:shadow-lg transition duration-300 p-3">
        {/* Product Image */}
        <div className="relative w-full aspect-[4/5] bg-black overflow-hidden">
          <img
            src={displayImage}
            alt={displayName}
            className="w-full h-full object-cover group-hover:opacity-90 transition duration-300"
          />

          {/* Hover Icons */}
          <div className="absolute inset-0 flex items-center justify-center  bg-opacity-40 opacity-0 group-hover:opacity-100 transition duration-300 space-x-3">
            <button className="bg-white p-2 rounded-full shadow hover:bg-[#1228e1] hover:text-white transition">
              <Heart className="w-5 h-5" />
            </button>
            <button className="bg-white p-2 rounded-full shadow hover:bg-[#1228e1] hover:text-white transition">
              <ShoppingCart className="w-5 h-5" />
            </button>
            <button
              onClick={() => setIsModalOpen(true)}
              className="bg-white p-2 rounded-full shadow hover:bg-[#1228e1] hover:text-white transition"
            >
              <Expand className="w-5 h-5" />
            </button>
          </div>
        </div>

        {/* Product Info */}
        <div className="mt-3 text-center">
          <p className="text-sm text-gray-500">{displayCompany}</p>
          <h3 className="text-base font-semibold text-gray-900">
            {displayName}
          </h3>
          <p className="text-[#1228e1] font-bold">
            {displayPrice !== "N/A" ? `Ksh. ${displayPrice}` : "Price not set"}
          </p>
        </div>
      </div>

      {/* Modal */}
      <ProductModal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        product={product || { id, name: displayName, company: displayCompany, price: displayPrice, thumbnail: displayImage }}
      />
    </>
  );
};

export default ProductCard;
</file>

<file path="src/components/common/ProductModal.jsx">
import React, { useEffect, useState } from "react";

import ReactDOM from "react-dom";
import { X } from "lucide-react";

const ProductModal = ({ isOpen, onClose, product }) => {
  const [showModal, setShowModal] = useState(false);

  // Animate open/close
  useEffect(() => {
    if (isOpen) {
      setShowModal(true);
    } else {
      const timer = setTimeout(() => setShowModal(false), 200); // match transition duration
      return () => clearTimeout(timer);
    }
  }, [isOpen]);

  // Close on ESC
  useEffect(() => {
    const handleEsc = (e) => e.key === "Escape" && onClose();
    document.addEventListener("keydown", handleEsc);
    return () => document.removeEventListener("keydown", handleEsc);
  }, [onClose]);

  if (!showModal) return null;

  const discounted =
    product?.discountedPrice && product?.discountedPrice < product?.price;

  return ReactDOM.createPortal(
    <div
      className={`fixed inset-0 z-50 flex items-center justify-center bg-black/50 
        transition-opacity duration-200 ${
          isOpen ? "opacity-100" : "opacity-0"
        }`}
      onClick={onClose}
      aria-modal="true"
      role="dialog"
    >
      <div
        className={`relative bg-white w-[95%] max-w-4xl rounded-2xl shadow-lg overflow-hidden 
          flex flex-col md:flex-row transform transition-transform duration-200 ${
            isOpen ? "scale-100 opacity-100" : "scale-95 opacity-0"
          }`}
        onClick={(e) => e.stopPropagation()}
      >
        {/* Left: Images */}
        <div className="md:w-1/2 p-4 flex flex-col items-center">
          <img
            src={product.thumbnail}
            alt={product.name}
            className="w-full max-h-[300px] object-cover rounded-lg"
          />
          <div className="flex space-x-2 mt-3">
            {product.images?.map((img, idx) => (
              <img
                key={idx}
                src={img}
                alt={`Thumbnail ${idx}`}
                className="w-16 h-16 object-cover rounded-md border cursor-pointer hover:border-[#1228e1]"
              />
            ))}
          </div>
        </div>

        {/* Right: Details */}
        <div className="md:w-1/2 p-6 flex flex-col">
          {/* Close button */}
          <button
            onClick={onClose}
            className="absolute top-4 right-4 p-2 bg-gray-100 rounded-full hover:bg-gray-200"
            aria-label="Close"
          >
            <X className="w-5 h-5" />
          </button>

          <h2 className="text-xl font-bold text-gray-900">{product.name}</h2>
          <p className="text-sm text-gray-500 mt-1">Brand: {product.brand}</p>
          <p className="text-sm text-gray-500">Condition: {product.condition}</p>

          {/* Price */}
          <div className="mt-3">
            {discounted ? (
              <div>
                <span className="text-2xl font-bold text-[#1228e1] mr-2">
                  Ksh {product.discountedPrice}
                </span>
                <span className="line-through text-gray-500">
                  Ksh {product.price}
                </span>
                <span className="ml-2 text-green-600 font-medium">10% OFF</span>
              </div>
            ) : (
              <span className="text-2xl font-bold text-[#1228e1]">
                Ksh {product.price}
              </span>
            )}
          </div>

          {/* Cart Summary */}
          <div className="mt-6 border-t pt-4">
            <div className="flex justify-between text-sm text-gray-600">
              <span>Items in Cart</span>
              <span>1</span>
            </div>
            <div className="flex justify-between text-sm text-gray-900 font-semibold mt-1">
              <span>Subtotal</span>
              <span>
                Ksh {discounted ? product.discountedPrice : product.price}
              </span>
            </div>
          </div>

          {/* Actions */}
          <div className="mt-6 flex space-x-3">
            <button
              onClick={onClose}
              className="w-1/2 py-2 rounded-lg border border-gray-300 hover:bg-gray-100"
            >
              Continue Shopping
            </button>
            <button className="w-1/2 py-2 rounded-lg bg-[#1228e1] text-white font-semibold hover:bg-[#0f20b3]">
              Proceed to Checkout
            </button>
          </div>

          {/* Extra Links */}
          <div className="mt-4 text-sm">
            <button className="text-[#1228e1] hover:underline">
              Add to Wishlist
            </button>
          </div>

          {/* Trust Indicators */}
          <div className="mt-6 flex space-x-3 items-center text-xs text-gray-500">
            <span className="px-2 py-1 border rounded">🔒 Secure Checkout</span>
            <span className="px-2 py-1 border rounded">✔ Buyer Protection</span>
          </div>
        </div>
      </div>
    </div>,
    document.body
  );
};

export default ProductModal;
</file>

<file path="src/components/common/ProductsGrid.jsx">
import React, { useState } from "react";

import ProductCard from "./ProductCard";

const ProductsGrid = ({ products,selectedCategory }) => {
  const productsPerPage = 16; // 4x4 grid
  const [currentPage, setCurrentPage] = useState(1);

  const totalPages = Math.ceil(products.length / productsPerPage);

  const startIndex = (currentPage - 1) * productsPerPage;
  const currentProducts = products.slice(
    startIndex,
    startIndex + productsPerPage
  );

  return (
    <div className="w-full my-6 px-4 sm:px-6 lg:px-8">
      <div className="mb-6">
  <h2 className="text-2xl font-bold text-gray-900 relative inline-block">
    {selectedCategory === "all"
      ? "All Products"
      : selectedCategory
          .replace(/-/g, " ")
          .replace(/\b\w/g, (c) => c.toUpperCase())}
    <span className="block w-16 h-1 bg-[#1228e1] mt-2 rounded"></span>
  </h2>
</div>
      {/* Products Grid */}
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
        {currentProducts.map((product) => (
          <ProductCard key={product.id} {...product} />
        ))}
      </div>

      {/* Pagination */}
      {totalPages > 1 && (
        <div className="mt-6 flex justify-center space-x-2">
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <button
              key={page}
              onClick={() => setCurrentPage(page)}
              className={`px-3 py-1 border ${
                page === currentPage
                  ? "bg-[#1228e1] text-white border-[#1228e1]"
                  : "bg-white text-gray-700 border-gray-300 hover:bg-gray-100"
              } rounded transition`}
            >
              {page}
            </button>
          ))}
        </div>
      )}
    </div>
  );
};

export default ProductsGrid;
</file>

<file path="src/components/common/ProductsHero.jsx">
import { Link } from "react-router-dom";
import React from "react";

const ProductsHero = ({ selectedSubcategory }) => {
  // Format subcategory for display
  const displayCategory = selectedSubcategory
    ? selectedSubcategory.replace(/-/g, " ")
    : null;

  return (
    <div
      className="w-full h-[25vh] relative flex items-center justify-center bg-black bg-opacity-10"
      style={{
        backgroundImage:
          "url('https://images.unsplash.com/photo-1584622781564-1d987709cea4?w=1600&h=400&fit=crop')",
        backgroundSize: "cover",
        backgroundPosition: "center",
      }}
    >
      <div className="absolute inset-0 bg-black bg-opacity-30"></div>

      <div className="relative text-center text-white">
        <h1 className="text-2xl md:text-3xl font-bold flex items-center justify-center gap-2">
          <Link
            to="/products"
            className="hover:text-[#1228e1] transition-colors duration-200"
          >
            Home
          </Link>
          {displayCategory && (
            <>
              <span className="mx-2">|</span>
              <span className="capitalize">{displayCategory}</span>
            </>
          )}
        </h1>
      </div>
    </div>
  );
};

export default ProductsHero;
</file>

<file path="src/components/common/SubcategoriesSection.jsx">
const SubcategoriesSection = ({ subcategories, onSelect }) => {
  return (
    <div className="w-full my-6 px-4 sm:px-6 lg:px-8">
      <h2 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">Subcategories</h2>

      <div
        className="grid gap-4 h-[25vh]"
        style={{ gridTemplateColumns: `repeat(${subcategories.length}, minmax(0, 1fr))` }}
      >
        {subcategories.map(subcat => (
          <div
            key={subcat.id}
            className="w-full aspect-[4/5] bg-white shadow hover:shadow-lg transition duration-300 flex flex-col cursor-pointer"
            onClick={() => onSelect(subcat.slug)}
          >
            <div className="h-4/5 w-full bg-black flex items-center justify-center">
              <span className="text-white font-semibold text-sm">Image</span>
            </div>
            <div className="h-1/5 flex items-center justify-center bg-white text-center px-2">
              <span className="font-semibold text-gray-900 text-sm sm:text-base break-words">
                {subcat.name}
              </span>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default SubcategoriesSection;
</file>

<file path="src/components/common/ThreeColumnSection.jsx">
import React from "react";

const ThreeColumnSection = () => {
  return (
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-16">
      {/* Grid: 12 columns */}
      <div className="grid grid-cols-1 md:grid-cols-12 gap-6 items-start">
        
        {/* Images section (≈62%) */}
        <div className="md:col-span-7 grid grid-cols-2 gap-6">
          {/* Image 1 */}
          <div className="w-full aspect-[3/4] bg-black"></div>

          {/* Image 2 shifted lower */}
          <div className="w-full aspect-[3/4] bg-black relative top-12"></div>
        </div>

        {/* Text Block aligned with Image 2 (≈38%) */}
        <div className="md:col-span-5 flex flex-col justify-center space-y-4 px-4 relative top-28">
          {/* Subheading */}
          <p className="text-sm font-semibold text-[#1228e1] uppercase tracking-wide">
            Premium Quality
          </p>

          {/* Main Heading */}
          <h2 className="text-2xl md:text-3xl font-bold uppercase text-gray-900">
            Modern Bathroom Solutions
          </h2>

          {/* Description */}
          <p className="text-gray-600 text-sm md:text-base">
            Discover stylish and durable bathroom fittings designed to bring
            elegance and functionality to your home.
          </p>

          {/* Button */}
          <a
            href="/products"
            className="inline-flex items-center justify-center bg-[#1228e1] text-white px-4 py-2 text-sm font-semibold uppercase tracking-wide hover:bg-blue-900 transition"
          >
            Explore Now
          </a>
        </div>
      </div>
    </div>
  );
};

export default ThreeColumnSection;
</file>

<file path="src/components/navigation/Footer.jsx">
import { FaFacebook, FaInstagram, FaTiktok, FaWhatsapp } from "react-icons/fa";
import { Mail, MapPin, Phone } from "lucide-react";

import React from "react";

const Footer = () => {
  return (
    <footer className="bg-white text-gray-800 pt-10 pb-6 border-t border-gray-200">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 grid grid-cols-1 md:grid-cols-3 gap-8">
        
        {/* Product Categories */}
        <div>
          <h3 className="text-lg font-bold mb-4 uppercase">Product Categories</h3>
          <ul className="space-y-2">
            <li><a href="/categories/plumbing-piping" className="hover:text-[#1228e1]">Plumbing & Piping</a></li>
            <li><a href="/categories/electrical" className="hover:text-[#1228e1]">Electrical</a></li>
            <li><a href="/categories/carpentry" className="hover:text-[#1228e1]">Carpentry</a></li>
            <li><a href="/categories/steel" className="hover:text-[#1228e1]">Steel</a></li>
            <li><a href="/categories/glues" className="hover:text-[#1228e1]">Glues</a></li>
            <li><a href="/categories/paints" className="hover:text-[#1228e1]">Paints</a></li>
            <li><a href="/categories/gas" className="hover:text-[#1228e1]">Gas</a></li>
            <li><a href="/categories/curtains" className="hover:text-[#1228e1]">Curtains</a></li>
            <li><a href="/categories/cement" className="hover:text-[#1228e1]">Cement</a></li>
            <li><a href="/categories/home-equipment" className="hover:text-[#1228e1]">Home Equipment</a></li>
          </ul>
        </div>

        {/* Contact Us */}
        <div>
          <h3 className="text-lg font-bold mb-4 uppercase">Contact Us</h3>
          <ul className="space-y-3">
            <li className="flex items-center space-x-2">
              <MapPin className="w-5 h-5 text-gray-600" />
              <span>123 Hardware St, Nairobi, Kenya</span>
            </li>
            <li className="flex items-center space-x-2">
              <Mail className="w-5 h-5 text-gray-600" />
              <span>info@hardwarestore.co.ke</span>
            </li>
            <li className="flex items-center space-x-2">
              <Phone className="w-5 h-5 text-gray-600" />
              <span>+254 700 123456</span>
            </li>
          </ul>
        </div>

        {/* My Account */}
        <div>
          <h3 className="text-lg font-bold mb-4 uppercase">My Account</h3>
          <ul className="space-y-2">
            <li><a href="/signin" className="hover:text-[#1228e1]">Sign In</a></li>
            <li><a href="/order-tracking" className="hover:text-[#1228e1]">Order Tracking</a></li>
            <li><a href="/create-account" className="hover:text-[#1228e1]">Create Account</a></li>
          </ul>
        </div>
      </div>

      {/* Social Media Icons */}
      <div className="mt-10 flex justify-center space-x-6">
        <a href="https://instagram.com" target="_blank" rel="noreferrer" className="text-gray-500 hover:text-[#1228e1] transition">
          <FaInstagram className="w-6 h-6" />
        </a>
        <a href="https://tiktok.com" target="_blank" rel="noreferrer" className="text-gray-500 hover:text-[#1228e1] transition">
          <FaTiktok className="w-6 h-6" />
        </a>
        <a href="https://wa.me/254700123456" target="_blank" rel="noreferrer" className="text-gray-500 hover:text-[#1228e1] transition">
          <FaWhatsapp className="w-6 h-6" />
        </a>
        <a href="https://facebook.com" target="_blank" rel="noreferrer" className="text-gray-500 hover:text-[#1228e1] transition">
          <FaFacebook className="w-6 h-6" />
        </a>
      </div>

      {/* Footer Bottom */}
      <div className="mt-6 border-t border-gray-200 pt-4 text-center text-sm text-gray-500">
        © {new Date().getFullYear()} Hardware Store. All rights reserved.
      </div>
    </footer>
  );
};

export default Footer;
</file>

<file path="src/components/navigation/Navbar.jsx">
import { ChevronDown, Heart, Search, ShoppingCart, User } from "lucide-react";

import { Link } from "react-router-dom";
import Logo from "../../assets/Logo.png";
import React from "react";

const Navbar = () => {
  // Example counts (can be hooked to state later)
  const favCount = 0;
  const cartCount = 0;

  return (
    <nav className="w-full bg-white shadow-md px-6 py-4 flex items-center justify-between relative">
      {/* Logo */}
      <div className="flex items-center space-x-2">
        <Link to="/">
          <img src={Logo} alt="Logo" className="h-12 w-auto" />
        </Link>
      </div>

      {/* Links */}
      <ul className="flex space-x-8 font-medium text-black relative">
        <li>
          <Link
            to="/"
            className="hover:text-[#1228e1] cursor-pointer transition-colors duration-200"
          >
            Home
          </Link>
        </li>

        {/* Products with Dropdown */}
        {/* Products with Dropdown */}
<li className="relative group cursor-pointer">
  <div className="flex items-center space-x-1 hover:text-[#1228e1] transition-colors duration-200">
    <Link to="/products">Products</Link>
    <ChevronDown size={16} />
  </div>

  {/* Dropdown Menu */}
  <ul className="absolute left-0 top-full mt-2 w-56 bg-white border border-gray-200 shadow-lg rounded-md opacity-0 group-hover:opacity-100 invisible group-hover:visible transition-all duration-200 z-50">
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/plumbing-piping">Plumbing & Piping</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/electrical">Electrical</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/carpentry">Carpentry</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/steel">Steel</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/glues">Glues</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/paints">Paints</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/gas">Gas</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/curtains">Curtains</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/cement">Cement</Link>
    </li>
    <li className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
      <Link to="/products/home-equipment">Home Equipment</Link>
    </li>
  </ul>
</li>


        <li>
          <Link
            to="/posts"
            className="hover:text-[#1228e1] cursor-pointer transition-colors duration-200"
          >
            Posts
          </Link>
        </li>
        <li>
          <Link
            to="/contact"
            className="hover:text-[#1228e1] cursor-pointer transition-colors duration-200"
          >
            Contact Us
          </Link>
        </li>
      </ul>

      {/* Icons */}
      <div className="flex space-x-6 text-black relative">
        <Search className="w-5 h-5 cursor-pointer hover:text-[#1228e1] transition-colors duration-200" />
        <User className="w-5 h-5 cursor-pointer hover:text-[#1228e1] transition-colors duration-200" />

        {/* Favorites with badge */}
        <div className="relative">
          <Heart className="w-5 h-5 cursor-pointer hover:text-[#1228e1] transition-colors duration-200" />
          <span className="absolute -top-2 -right-2 bg-[#1228e1] text-white text-xs font-bold w-5 h-5 flex items-center justify-center rounded-full">
            {favCount}
          </span>
        </div>

        {/* Cart with badge */}
        <div className="relative">
          <ShoppingCart className="w-5 h-5 cursor-pointer hover:text-[#1228e1] transition-colors duration-200" />
          <span className="absolute -top-2 -right-2 bg-[#1228e1] text-white text-xs font-bold w-5 h-5 flex items-center justify-center rounded-full">
            {cartCount}
          </span>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;
</file>

<file path="src/components/navigation/Topbar.jsx">
import React from "react";

const TopBar = () => {
  return (
    <div className="w-full bg-[#1228e1] text-white text-sm px-6 py-2 flex items-center justify-between">
      {/* Left message */}
      <p>We do delivery across the country</p>

      {/* Contact info */}
      <div className="flex space-x-6">
        <a href="mailto:info@yourstore.com" className="hover:underline">
          info@yourstore.com
        </a>
        <a href="tel:+254700000000" className="hover:underline">
          +254 700 000 000
        </a>
      </div>
    </div>
  );
};

export default TopBar;
</file>

<file path="src/pages/Home.jsx">
import CompanyLogos from "../components/common/CompanyLogos";
import FeaturedProducts from "../components/common/FeaturedProducts";
import FlexSlider from "../components/common/FlexSlider";
import FloatingActions from "../components/common/FloatingActions";
import Footer from "../components/navigation/Footer";
import InfoSection from "../components/common/InfoSection";
import LatestProducts from "../components/common/LatestsProducts";
import Navbar from "../components/navigation/Navbar";
// src/pages/Home.jsx
import React from "react";
import ThreeColumnSection from "../components/common/ThreeColumnSection";
import TopBar from "../components/navigation/Topbar";

const Home = () => {
  return (
    <div>
      <TopBar />
      <Navbar />
      <FlexSlider />
      <FloatingActions />
      <FeaturedProducts />
      <LatestProducts />
      <InfoSection />
      <ThreeColumnSection />
      <CompanyLogos />
      <Footer />
    </div>
  );
};

export default Home;
</file>

<file path="src/pages/Products.jsx">
import React, { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";

import FloatingActions from "../components/common/FloatingActions";
import Footer from "../components/navigation/Footer";
import Navbar from "../components/navigation/Navbar";
import ProductsGrid from "../components/common/ProductsGrid";
import ProductsHero from "../components/common/ProductsHero";
import SubcategoriesSection from "../components/common/SubcategoriesSection";
import TopBar from "../components/navigation/Topbar";

const Products = () => {
  const { subcategory } = useParams();
  const navigate = useNavigate();

  const [selectedSubcategory, setSelectedSubcategory] = useState(subcategory || null);
  const [products, setProducts] = useState([]);

  const subcategories = [
    { id: 1, name: "Plumbing & Piping", slug: "plumbing-piping" },
    { id: 2, name: "Electrical", slug: "electrical" },
    { id: 3, name: "Carpentry", slug: "carpentry" },
    { id: 4, name: "Steel", slug: "steel" },
    { id: 5, name: "Glues", slug: "glues" },
    { id: 6, name: "Paints", slug: "paints" },
    { id: 7, name: "Gas", slug: "gas" },
    { id: 8, name: "Curtains", slug: "curtains" },
    { id: 9, name: "Cement", slug: "cement" },
    { id: 10, name: "Home Equipment", slug: "home-equipment" },
  ];

  // Update state when URL changes
  useEffect(() => {
    setSelectedSubcategory(subcategory || null);

    // const allProducts = [
    //   { id: 1, name: "Pipe 1", company: "A Co", price: 500, category: "plumbing-piping" },
    //   { id: 2, name: "Wire 1", company: "B Co", price: 300, category: "electrical" },
    //   { id: 3, name: "Hammer", company: "C Co", price: 800, category: "carpentry" },
    //   { id: 4, name: "Steel Sheet", company: "D Co", price: 1200, category: "steel" },
    // ];
    const allProducts=[{id:1,name:"Pipe 1",company:"A Co",price:500,category:"plumbing-piping"},{id:2,name:"Wire 1",company:"B Co",price:300,category:"electrical"},{id:3,name:"Hammer",company:"C Co",price:800,category:"carpentry"},{id:4,name:"Steel Sheet",company:"D Co",price:1200,category:"steel"},{id:5,name:"Glue 1",company:"E Co",price:150,category:"glues"},{id:6,name:"Paint Brush",company:"F Co",price:250,category:"paints"},{id:7,name:"Gas Cylinder",company:"G Co",price:3500,category:"gas"},{id:8,name:"Curtain Set",company:"H Co",price:1200,category:"curtains"},{id:9,name:"Cement Bag",company:"I Co",price:700,category:"cement"},{id:10,name:"Drill Machine",company:"J Co",price:1500,category:"home-equipment"},{id:11,name:"Pipe 2",company:"A Co",price:550,category:"plumbing-piping"},{id:12,name:"Wire 2",company:"B Co",price:320,category:"electrical"},{id:13,name:"Hammer 2",company:"C Co",price:850,category:"carpentry"},{id:14,name:"Steel Rod",company:"D Co",price:1300,category:"steel"},{id:15,name:"Glue 2",company:"E Co",price:180,category:"glues"},{id:16,name:"Paint Roller",company:"F Co",price:300,category:"paints"},{id:17,name:"Gas Stove",company:"G Co",price:4500,category:"gas"},{id:18,name:"Curtain Rod",company:"H Co",price:400,category:"curtains"},{id:19,name:"Cement Sack",company:"I Co",price:750,category:"cement"},{id:20,name:"Blender",company:"J Co",price:2000,category:"home-equipment"},{id:21,name:"Pipe 3",company:"A Co",price:600,category:"plumbing-piping"},{id:22,name:"Wire 3",company:"B Co",price:350,category:"electrical"},{id:23,name:"Saw",company:"C Co",price:900,category:"carpentry"},{id:24,name:"Steel Beam",company:"D Co",price:1400,category:"steel"},{id:25,name:"Glue 3",company:"E Co",price:200,category:"glues"},{id:26,name:"Paint Can",company:"F Co",price:400,category:"paints"},{id:27,name:"Gas Regulator",company:"G Co",price:1500,category:"gas"},{id:28,name:"Curtain Fabric",company:"H Co",price:900,category:"curtains"},{id:29,name:"Cement Mix",company:"I Co",price:800,category:"cement"},{id:30,name:"Toaster",company:"J Co",price:1200,category:"home-equipment"},{id:31,name:"Pipe 4",company:"A Co",price:650,category:"plumbing-piping"},{id:32,name:"Wire 4",company:"B Co",price:370,category:"electrical"},{id:33,name:"Chisel",company:"C Co",price:950,category:"carpentry"},{id:34,name:"Steel Panel",company:"D Co",price:1500,category:"steel"},{id:35,name:"Glue 4",company:"E Co",price:220,category:"glues"},{id:36,name:"Paint Tray",company:"F Co",price:350,category:"paints"},{id:37,name:"Gas Pipe",company:"G Co",price:1200,category:"gas"},{id:38,name:"Curtain Hook",company:"H Co",price:150,category:"curtains"},{id:39,name:"Cement Mixer",company:"I Co",price:3000,category:"cement"},{id:40,name:"Microwave",company:"J Co",price:4000,category:"home-equipment"}];


    if (subcategory) {
      setProducts(allProducts.filter(p => p.category === subcategory));
    } else {
      setProducts(allProducts);
    }
  }, [subcategory]);

  // Clicking a subcategory updates state & URL
  const handleSelectSubcategory = (slug) => {
    navigate(`/products/${slug}`);
  };

  return (
    <div>
      <TopBar />
      <Navbar />
      <ProductsHero selectedSubcategory={selectedSubcategory} />
      <SubcategoriesSection
        subcategories={subcategories}
        onSelect={handleSelectSubcategory}
      />
      <ProductsGrid products={products} selectedCategory={subcategory || "all"} />
      <Footer />
      <FloatingActions />
    </div>
  );
};

export default Products;
</file>

<file path="src/App.css">
@import "tailwindcss";
</file>

<file path="src/App.jsx">
import { Route, BrowserRouter as Router, Routes } from "react-router-dom";

import Home from "./pages/Home";
import Products from "./pages/Products";

const App = () => {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/products/:subcategory?" element={<Products />} />
      </Routes>
    </Router>
  );
};

export default App;
</file>

<file path="src/index.css">
@import "tailwindcss";
</file>

<file path="src/main.jsx">
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- <link rel="icon" type="image/svg+xml" href="/vite.svg" /> -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Joel's Store</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "h-store",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.1.12",
    "axios": "^1.12.2",
    "framer-motion": "^12.23.12",
    "lucide-react": "^0.543.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-icons": "^5.5.0",
    "react-router-dom": "^7.8.2",
    "tailwindcss": "^4.1.12"
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.1.2"
  }
}
</file>

<file path="README.md">
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
</file>

<file path="vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(), tailwindcss(), ], 
})
</file>

</files>
